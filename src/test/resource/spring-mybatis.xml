<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd">

<context:component-scan base-package="com.sbm.dao" />
<context:component-scan base-package="com.sbm.service.impl" />
<context:property-placeholder ignore-unresolvable="true" location="classpath:jdbc.properties" />  
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"   
        destroy-method="close">    
        <property name="driverClassName" value="${jdbc.driver}" />    
        <property name="url" value="${jdbc.url}" />    
        <property name="username" value="${jdbc.username}" />    
        <property name="password" value="qiao1995323422" />    
        <!-- 初始化连接大小 -->    
        <property name="initialSize" value="${jdbc.initialSize}"></property>    
        <!-- 连接池最大数量 -->    
        <property name="maxActive" value="${jdbc.maxActive}"></property>    
        <!-- 连接池最大空闲 -->    
        <property name="maxIdle" value="${jdbc.maxIdle}"></property>    
        <!-- 连接池最小空闲 -->    
        <property name="minIdle" value="${jdbc.minIdle}"></property>    
        <!-- 获取连接最大等待时间 -->    
        <property name="maxWait" value="${jdbc.maxWait}"></property>    
    </bean>    
    
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">    
        <property name="dataSource" ref="dataSource" />    
        <!-- 自动扫描mapping.xml文件 -->    
        <property name="mapperLocations" value="classpath:com/sbm/mapping/*.xml"></property>
    </bean>
    
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">    
        <property name="basePackage" value="com.sbm.dao" />    
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>    
    </bean>    
    
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->    
    <bean id="transactionManager"    
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">    
        <property name="dataSource" ref="dataSource" />    
    </bean> 
    
    <!-- 支持 @Transactional 标记 -->
	<tx:annotation-driven />
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!--<tx:method name="find*" propagation="SUPPORTS" read-only="true" />-->
			<!--<tx:method name="query*" propagation="SUPPORTS" read-only="true" />-->
			<!--<tx:method name="list*" propagation="SUPPORTS" read-only="true" />-->
			<!--<tx:method name="search*" propagation="SUPPORTS" read-only="true" />-->
			<!--<tx:method name="get*" propagation="SUPPORTS" read-only="true" />-->
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="execute*" propagation="REQUIRED" />
			<tx:method name="writeLog*" propagation="NOT_SUPPORTED" />
			<tx:method name="txIgnore*" propagation="NOT_SUPPORTED" />

			<!--<tx:method name="saveIfNoExist*" propagation="NOT_SUPPORTED" />-->
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<!-- 支持 @Transactional 标记 -->
	<tx:annotation-driven />
	
	<aop:config proxy-target-class="true">
		<aop:pointcut id="interceptorPointCuts"
			expression="execution(* com.sbm..service.impl.*ServiceImpl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" order="1"/>
	</aop:config>   
</beans>